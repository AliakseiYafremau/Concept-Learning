def decorator(func): # Декоратор с аргументом в виде функции, которую он будет оборачивать
    def wrapper(): # Обертка
        print("-----") # Дополнительный функционал, для которого мы и используем декоратор
        func() # Вызов самой функции
        print("-----") # Дополнительный функционал, для которого мы и используем декоратор
    return wrapper # Возвращаем обертку/функцию

def simple_function(): # функция, которую мы будем оборачивать
    print("Hello world")

@decorator # Используем синтаксический сахар для обертки функции
def sintatic_sugar_function():
    print("Hello world")


decorated_function = decorator(func=simple_function) # Указываем функцию, которую хотим обернуть и получаем обертку/функцию с дополнительным функционалом
decorated_function() # Вызываем обертку/функцию с необходимыми аргументами

sintatic_sugar_function() # Вызываем обертку/функцию с необходимыми аргументами
